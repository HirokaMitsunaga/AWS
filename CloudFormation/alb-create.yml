AWSTemplateFormatVersion: "2010-09-09"
Description: vpc create template

Parameters:
  EnvironmentName:
    Type: String
    Default: test-environment

  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB ingress group
      GroupName: !Sub ${EnvironmentName}-alb-sg
      VpcId: !ImportValue test-environment-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-alb-sg

  TargetGroupSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Target Group ingress group
      GroupName: !Sub ${EnvironmentName}-tg-sg
      VpcId: !ImportValue test-environment-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-tg-sg

  Instence01:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-0de5311b2a443fb89"
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref TargetGroupSecurityGroup
      SubnetId: !ImportValue test-environment-PublicSubnet01
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PublicSubnet01-Instence01
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo amazon-linux-extras install nginx1
          sudo systemctl enable nginx
          sudo systemctl start nginx

  Instence02:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-0de5311b2a443fb89"
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref TargetGroupSecurityGroup
      SubnetId: !ImportValue test-environment-PublicSubnet02
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PublicSubnet02-Instence02
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo amazon-linux-extras install nginx1
          sudo systemctl enable nginx
          sudo systemctl start nginx

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: "application"
      Scheme: "internet-facing"
      Name: !Sub ${EnvironmentName}-alb
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-alb
      IpAddressType: ipv4
      Subnets: 
        - !ImportValue test-environment-PublicSubnet01
        - !ImportValue test-environment-PublicSubnet02
      SecurityGroups:
        - !Ref ALBSecurityGroup
  
  ListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
  
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${EnvironmentName}-tg
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-tg
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: '200'
      VpcId: !ImportValue  test-environment-VPC
      TargetType: instance
      Targets:
        - Id: !Ref Instence01
        - Id: !Ref Instence02

Outputs:
  ALBURL:
    Description: ALB endpoint URL
    Value: !Join
        - ""
        - - http://
          - !GetAtt ALB.DNSName






